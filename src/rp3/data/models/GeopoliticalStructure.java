package rp3.data.models;

import java.util.ArrayList;
import java.util.List;

import android.database.Cursor;
import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.util.CursorUtils;

public class GeopoliticalStructure extends EntityBase<GeopoliticalStructure> {

	private long id;
	private int GeopoliticalStructureId;
	private int geopoliticalStructureTypeId;
	private String isoCode;
	private String name;
	private float latitude;
	private float longitude;
	private int parentGeopoliticalStructureId;
	
	@Override
	public long getID() {		
		return id;
	}

	@Override
	public void setID(long id) {
		this.id = id;
	}

	@Override
	public boolean isAutoGeneratedId() {		
		return false;
	}

	@Override
	public String getTableName() {		
		return Contract.GeopoliticalStructure.TABLE_NAME;
	}

	@Override
	public void setValues() {
		setValue(Contract.GeopoliticalStructure._ID, this.id);
		setValue(Contract.GeopoliticalStructure.COLUMN_GEOPOLITICAL_STRUCTURE_ID, this.GeopoliticalStructureId);
		setValue(Contract.GeopoliticalStructure.COLUMN_GEOPOLITICAL_STRUCTURE_TYPE_ID, this.geopoliticalStructureTypeId);
		setValue(Contract.GeopoliticalStructure.COLUMN_ISO_CODE, this.isoCode);
		setValue(Contract.GeopoliticalStructure.COLUMN_NAME, this.name);
		setValue(Contract.GeopoliticalStructure.COLUMN_LATITUDE, this.latitude);
		setValue(Contract.GeopoliticalStructure.COLUMN_LONGITUDE, this.longitude);
		setValue(Contract.GeopoliticalStructure.COLUMN_PARENT_GEOPOLITICAL_STRUCTURE_ID, this.parentGeopoliticalStructureId);
	}
	
	@Override
	public Object getValue(String key) {
		return null;
	}

	@Override
	public String getDescription() {		
		return this.name;
	}

	public int getGeopoliticalStructureId() {
		return GeopoliticalStructureId;
	}

	public void setGeopoliticalStructureId(int geopoliticalStructureId) {
		GeopoliticalStructureId = geopoliticalStructureId;
	}

	public int getGeopoliticalStructureTypeId() {
		return geopoliticalStructureTypeId;
	}

	public void setGeopoliticalStructureTypeId(int geopoliticalStructureTypeId) {
		this.geopoliticalStructureTypeId = geopoliticalStructureTypeId;
	}

	public String getIsoCode() {
		return isoCode;
	}

	public void setIsoCode(String isoCode) {
		this.isoCode = isoCode;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public float getLatitude() {
		return latitude;
	}

	public void setLatitude(float latitude) {
		this.latitude = latitude;
	}

	public float getLongitude() {
		return longitude;
	}

	public void setLongitude(float longitude) {
		this.longitude = longitude;
	}

	public int getParentGeopoliticalStructureId() {
		return parentGeopoliticalStructureId;
	}

	public void setParentGeopoliticalStructureId(int parentGeopoliticalStructureId) {
		this.parentGeopoliticalStructureId = parentGeopoliticalStructureId;
	}
	
	public static List<GeopoliticalStructure> getGeopoliticalStructure(DataBase db, String code){
		Cursor c = db.query(Contract.GeopoliticalStructure.TABLE_NAME, new String[]{
			Contract.GeopoliticalStructure.COLUMN_GEOPOLITICAL_STRUCTURE_ID,
		    Contract.GeopoliticalStructure.COLUMN_GEOPOLITICAL_STRUCTURE_TYPE_ID,
		    Contract.GeopoliticalStructure.COLUMN_ISO_CODE,
		    Contract.GeopoliticalStructure.COLUMN_NAME,
		    Contract.GeopoliticalStructure.COLUMN_LATITUDE,
		    Contract.GeopoliticalStructure.COLUMN_LONGITUDE,
			Contract.GeopoliticalStructure.COLUMN_PARENT_GEOPOLITICAL_STRUCTURE_ID
		});
		
		List<GeopoliticalStructure> list = new ArrayList<GeopoliticalStructure>();
		while(c.moveToNext()){
			GeopoliticalStructure geo = new GeopoliticalStructure();
			geo.setGeopoliticalStructureId(CursorUtils.getInt(c, Contract.GeopoliticalStructure.FIELD_GEOPOLITICAL_STRUCTURE_ID));
			geo.setGeopoliticalStructureTypeId(CursorUtils.getInt(c, Contract.GeopoliticalStructure.FIELD_GEOPOLITICAL_STRUCTURE_TYPE_ID));
			geo.setIsoCode(CursorUtils.getString(c, Contract.GeopoliticalStructure.FIELD_ISO_CODE));
			geo.setName(CursorUtils.getString(c, Contract.GeopoliticalStructure.FIELD_NAME));
			geo.setLatitude(CursorUtils.getFloat(c, Contract.GeopoliticalStructure.FIELD_LATITUDE));
			geo.setLongitude(CursorUtils.getFloat(c, Contract.GeopoliticalStructure.FIELD_LONGITUDE));
			geo.setParentGeopoliticalStructureId(CursorUtils.getInt(c, Contract.GeopoliticalStructure.FIELD_PARENT_GEOPOLITICAL_STRUCTURE_ID));
		
			list.add(geo);
		}
		return list;
	}
}
